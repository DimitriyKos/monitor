# manager_monitor.py
import asyncio
import sqlite3
import shutil
import os
from datetime import datetime, timedelta

from manager_parsing import check_prices_for_user

DB_FILE = "db.sqlite"
PRODUCTS_FOLDER = "Products"


async def start_monitoring_handler(message, bot):
    """
    –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ü–µ–Ω –Ω–∞ 7 –¥–Ω–µ–π.
    –ö–∞–∂–¥—ã–µ 1 —á–∞—Å: —á–∏—Å—Ç–∏–º –ø–∞–ø–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–∫–∞—á–∏–≤–∞–µ–º –Ω–æ–≤—ã–µ HTML,
    –æ–±–Ω–æ–≤–ª—è–µ–º –±–∞–∑—É –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–µ–Ω –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –Ω–∞—á–∞–ª–∞ –¥–Ω—è –∏ –Ω–µ–¥–µ–ª–∏.
    """
    await message.answer("üöÄ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ü–µ–Ω –Ω–∞ 7 –¥–Ω–µ–π –∑–∞–ø—É—â–µ–Ω!")
    print("üöÄ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ü–µ–Ω –∑–∞–ø—É—â–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", message.from_user.id)

    user_id = str(message.from_user.id)

    async def monitor():
        for hour in range(7 * 24):  # 7 –¥–Ω–µ–π * 24 —á–∞—Å–∞
            print(f"\nüïí [{datetime.now().strftime('%Y-%m-%d %H:%M:%S')}] –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ ‚Ññ{hour+1}")

            # 1. –ß–∏—Å—Ç–∏–º –ø–∞–ø–∫—É —Å HTML –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user_folder = os.path.join(PRODUCTS_FOLDER, user_id)
            if os.path.exists(user_folder):
                shutil.rmtree(user_folder)
                print(f"üóë –ü–∞–ø–∫–∞ {user_folder} –æ—á–∏—â–µ–Ω–∞")

            # 2. –°–∫–∞—á–∏–≤–∞–µ–º –Ω–æ–≤—ã–µ HTML –∏ –æ–±–Ω–æ–≤–ª—è–µ–º last_price_* –≤ –±–∞–∑–µ
            print("‚¨áÔ∏è –°–∫–∞—á–∏–≤–∞–µ–º —Å–≤–µ–∂–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ç–æ–≤–∞—Ä–æ–≤...")
            await check_prices_for_user(message)
            print("üì¶ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∞ —Å–≤–µ–∂–∏–º–∏ —Ü–µ–Ω–∞–º–∏")

            # 3. –ó–∞–≥—Ä—É–∂–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –ë–î
            conn = sqlite3.connect(DB_FILE)
            cursor = conn.cursor()
            cursor.execute("""
                SELECT id, product_name, product_url,
                       last_price_card, last_price_no_card,
                       day_price_card, day_price_no_card, day_start_time,
                       week_price_card, week_price_no_card, week_start_time
                FROM products
                WHERE user_id=?
            """, (user_id,))
            products = cursor.fetchall()

            today = datetime.now().date()
            changed_products = []

            print(f"üîç –ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏: {len(products)}")

            # 4. –û–±–Ω–æ–≤–ª—è–µ–º day/week –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ + –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π
            for product in products:
                (pid, name, url,
                 last_card, last_no_card,
                 day_card, day_no_card, day_start,
                 week_card, week_no_card, week_start) = product

                print(f"   ‚ñ∂ {name} | üí≥ {last_card} | üè∑ {last_no_card}")

                # --- –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–Ω–µ–≤–Ω—ã—Ö —Ü–µ–Ω ---
                if not day_start or datetime.fromisoformat(day_start).date() < today:
                    cursor.execute("""
                        UPDATE products
                        SET day_price_card=?, day_price_no_card=?, day_start_time=?
                        WHERE id=?
                    """, (last_card, last_no_card, today.isoformat(), pid))
                    print(f"   üîÑ –û–±–Ω–æ–≤–ª–µ–Ω—ã –¥–Ω–µ–≤–Ω—ã–µ —Ü–µ–Ω—ã –¥–ª—è {name}")

                # --- –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–µ–¥–µ–ª—å–Ω—ã—Ö —Ü–µ–Ω ---
                if not week_start or datetime.fromisoformat(week_start).date() <= today - timedelta(days=7):
                    cursor.execute("""
                        UPDATE products
                        SET week_price_card=?, week_price_no_card=?, week_start_time=?
                        WHERE id=?
                    """, (last_card, last_no_card, today.isoformat(), pid))
                    print(f"   üîÑ –û–±–Ω–æ–≤–ª–µ–Ω—ã –Ω–µ–¥–µ–ª—å–Ω—ã–µ —Ü–µ–Ω—ã –¥–ª—è {name}")

                # --- –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ day/week ---
                if day_card and last_card and abs(last_card - day_card) / day_card > 0.1:
                    msg = (f"‚ö†Ô∏è –¶–µ–Ω–∞ –Ω–∞ '{name}' –∏–∑–º–µ–Ω–∏–ª–∞—Å—å –±–æ–ª–µ–µ —á–µ–º –Ω–∞ 10% —Å –Ω–∞—á–∞–ª–∞ –¥–Ω—è!\n"
                           f"üí≥ {day_card} ‚Üí {last_card}")
                    await bot.send_message(message.chat.id, msg)
                    changed_products.append(msg)

                if day_no_card and last_no_card and abs(last_no_card - day_no_card) / day_no_card > 0.1:
                    msg = (f"‚ö†Ô∏è –¶–µ–Ω–∞ –±–µ–∑ –∫–∞—Ä—Ç—ã –Ω–∞ '{name}' –∏–∑–º–µ–Ω–∏–ª–∞—Å—å –±–æ–ª–µ–µ —á–µ–º –Ω–∞ 10% —Å –Ω–∞—á–∞–ª–∞ –¥–Ω—è!\n"
                           f"üè∑ {day_no_card} ‚Üí {last_no_card}")
                    await bot.send_message(message.chat.id, msg)
                    changed_products.append(msg)

                if week_card and last_card and abs(last_card - week_card) / week_card > 0.1:
                    msg = (f"üìà –¶–µ–Ω–∞ –Ω–∞ '{name}' –∏–∑–º–µ–Ω–∏–ª–∞—Å—å –±–æ–ª–µ–µ —á–µ–º –Ω–∞ 10% —Å –Ω–∞—á–∞–ª–∞ –Ω–µ–¥–µ–ª–∏!\n"
                           f"üí≥ {week_card} ‚Üí {last_card}")
                    await bot.send_message(message.chat.id, msg)
                    changed_products.append(msg)

                if week_no_card and last_no_card and abs(last_no_card - week_no_card) / week_no_card > 0.1:
                    msg = (f"üìà –¶–µ–Ω–∞ –±–µ–∑ –∫–∞—Ä—Ç—ã –Ω–∞ '{name}' –∏–∑–º–µ–Ω–∏–ª–∞—Å—å –±–æ–ª–µ–µ —á–µ–º –Ω–∞ 10% —Å –Ω–∞—á–∞–ª–∞ –Ω–µ–¥–µ–ª–∏!\n"
                           f"üè∑ {week_no_card} ‚Üí {last_no_card}")
                    await bot.send_message(message.chat.id, msg)
                    changed_products.append(msg)

            conn.commit()
            conn.close()

            # 5. –õ–æ–≥ –∏—Ç–æ–≥–æ–≤
            print(f"‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {len(products)}")
            if changed_products:
                print("‚ö° –ò–∑–º–µ–Ω–µ–Ω–∏—è –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã:")
                for msg in changed_products:
                    print("   -", msg.replace("\n", " "))
            else:
                print("‚ÑπÔ∏è –ò–∑–º–µ–Ω–µ–Ω–∏–π —Ü–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")

            # 6. –ñ–¥—ë–º 1 —á–∞—Å
            await asyncio.sleep(3600)

    asyncio.create_task(monitor())
